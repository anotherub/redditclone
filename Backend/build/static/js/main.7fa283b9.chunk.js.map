{"version":3,"sources":["logo.svg","libs/requests.js","store/login.js","pages/Signin.jsx","pages/Signup.jsx","store/post.js","components/NewPost.jsx","components/SingleComment.jsx","components/ReplyComment.jsx","components/RecursiveContainer.jsx","components/Post.jsx","components/Header.jsx","store/users.js","components/ListAllUsers.jsx","components/Sidebar.jsx","pages/Home.jsx","App.js","serviceWorker.js","store/store.js","index.js","libs/util.js"],"names":["module","exports","axios","defaults","withCredentials","baseURL","headers","Accept","get","url","a","post","data","del","delete","signup","createAsyncThunk","formData","rejectWithValue","response","signin","console","log","JSON","stringify","result","Login","createSlice","name","initialState","isAuthenticated","userInfo","reducers","testAction","state","payload","Date","now","msg","signout","localStorage","setItem","removeItem","extraReducers","builder","addCase","fulfilled","rejected","action","status","username","actions","Copyright","Typography","variant","color","align","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignIn","useState","setUsername","password","setPassword","wrongCreds","setWrongCreds","classes","dispatcher","useDispatch","history","useHistory","handleFormSubmit","event","preventDefault","replace","Container","component","maxWidth","className","Avatar","onSubmit","TextField","required","fullWidth","id","label","autoComplete","autoFocus","value","onChange","target","type","Alert","severity","style","justifyContent","Button","Grid","container","item","xs","href","textDecoration","to","Box","mt","SignUp","firstName","setFirstName","lastName","setLastName","handleSubmit","message","alert","sm","justify","postQuestion","deletePost","likePost","unlikePost","getAllQuestions","_","getPostById","postComment","postId","comment","parentCommentId","Post","posts","arePostLoaded","eachPost","addCommentToStore","parentPostId","comments","length","push","unshift","_id","flag","i","likes","getItem","like","toString","isPostLiked","totalDislikes","totalLikes","deletedCount","splice","findIndex","root","NewPost","setPost","useSelector","login","conatiner","direction","Validate","position","multiline","rows","defaultValue","placeholder","onClick","bottom","right","SingleComment","refreshFunction","commentReply","setCommentReply","openReply","setOpenReply","handleOpenReply","marginLeft","Card","CardContent","dayjs","time","format","minWidth","bullet","transform","title","fontSize","pos","marginBottom","expand","transition","transitions","create","duration","shortest","expandOpen","ReplyComment","commentList","childCommentCount","setChildCommentCount","showReplyComments","setShowReplyComments","React","expanded","setExpanded","useEffect","commentNumber","map","clsx","index","RecursiveContainer","setComment","content","dispatch","disableButton","setDisableButton","postStats","getPostData","handleLikeButton","handleUnikeButton","handleDeleteButton","CardActions","size","disabled","IconButton","totalComments","visibility","getUsername","Collapse","in","timeout","unmountOnExit","doc","reverse","grow","flexGrow","menuButton","marginRight","breakpoints","up","search","borderRadius","shape","fade","common","white","searchIcon","padding","height","pointerEvents","inputRoot","inputInput","paddingLeft","sectionDesktop","sectionMobile","PrimarySearchAppBar","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","handleLogout","window","location","reload","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","renderMobileMenu","aria-label","Badge","badgeContent","aria-controls","aria-haspopup","AppBar","Toolbar","edge","noWrap","InputBase","input","inputProps","getOtherUsers","searchUserById","Users","otherUsers","users","ListAllUsers","UserInfo","info","OtherUsers","user","background","ClippedDrawer","List","ListItem","button","ListItemIcon","ListItemText","primary","Home","store","getAllPosts","flex","minHeight","xm","top","lg","borderRight","overflow","App","PathSwitcher","PrivateRoute","exact","path","Auth","children","rest","render","pathname","from","hostname","match","combineReducers","configureStore","reducer","middleware","thunkMiddleware","devTools","createBrowserHistory","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.7fa283b9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import axios from 'axios'\r\naxios.defaults.withCredentials = true\r\naxios.defaults.baseURL = 'http://localhost:3001'\r\n\r\nconst headers = {\r\n  'Content-Type': 'application/json',\r\n  Accept: 'application/json'\r\n  // 'x-user-lang-pref': 'en'\r\n  // 'Access-Control-Allow-Origin': 'http://localhost:3002'\r\n}\r\n\r\nconst get = async (url) => axios.get(url, { headers })\r\n\r\nconst post = async (url, data) => axios.post(url, data, { headers })\r\n\r\nconst put = async (url, data) => axios.put(url, data, { headers })\r\n\r\nconst del = async (url) => axios.delete(url, { headers })\r\n\r\nexport { get, post, put, del }\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { post } from '../libs/requests'\r\n\r\nconst initialState = {\r\n  isAuthenticated: null,\r\n  userInfo: {}\r\n}\r\n\r\nexport const signup = createAsyncThunk('loginStore/signup', async (formData, { rejectWithValue }) => {\r\n  try {\r\n    const { data } = await post('/api/v1/users/register', formData)\r\n    return data\r\n  } catch (err) {\r\n    const { response } = err\r\n    if (!response) {\r\n      throw err\r\n    }\r\n    return rejectWithValue(response.data)\r\n  }\r\n})\r\nexport const signin = createAsyncThunk('loginStore/signin', async (formData, { rejectWithValue }) => {\r\n  try {\r\n    console.log('XX', JSON.stringify(formData))\r\n    const result = await post('/api/v1/users/authenticate', JSON.stringify(formData))\r\n    return result\r\n  } catch (err) {\r\n    const { response } = err\r\n    if (!response) {\r\n      throw err\r\n    }\r\n    return rejectWithValue(response)\r\n  }\r\n})\r\n\r\nconst Login = createSlice({\r\n  name: 'loginStore',\r\n  initialState,\r\n\r\n  reducers: {\r\n    testAction: (state, { payload }) => {\r\n      console.log(`${Date.now()} - TEST ACTION: `, payload.msg)\r\n    },\r\n    signout: (state, { payload }) => {\r\n      localStorage.setItem('isLoggedIn', 'false')\r\n      localStorage.removeItem('username')\r\n      state = undefined\r\n    }\r\n  },\r\n\r\n  extraReducers: (builder) => {\r\n    builder.addCase(signup.fulfilled, (state, { payload }) => {})\r\n\r\n    builder.addCase(signup.rejected, (state, action) => {\r\n      console.log('signup ERROR', action)\r\n    })\r\n    builder.addCase(signin.fulfilled, (state, { payload }) => {\r\n      const { data, status } = payload\r\n      if (status) {\r\n        state.isAuthenticated = true\r\n        state.userInfo = data\r\n        localStorage.setItem('username', data.data.username)\r\n      } else state.isAuthenticated = false\r\n    })\r\n\r\n    builder.addCase(signin.rejected, (state, action) => {\r\n      console.log('signin ERROR occured', action)\r\n    })\r\n  }\r\n})\r\n\r\nexport const { testAction, signout } = Login.actions\r\n\r\nexport default Login.reducer\r\n","import React, { useState } from 'react'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Box from '@material-ui/core/Box'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Container from '@material-ui/core/Container'\r\nimport { signin } from '../store/login'\r\nimport { useDispatch } from 'react-redux'\r\nimport Alert from '@material-ui/lab/Alert'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant='body2' color='textSecondary' align='center'>\r\n      {'Copyright © Umesh Bhat '}\r\n\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  }\r\n}))\r\n\r\nexport default function SignIn() {\r\n  const [username, setUsername] = useState('umeshbhat')\r\n  const [password, setPassword] = useState('umeshbhat')\r\n  const [wrongCreds, setWrongCreds] = useState(false)\r\n  const classes = useStyles()\r\n  const dispatcher = useDispatch()\r\n  const history = useHistory()\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault()\r\n    setWrongCreds(false)\r\n    const formData = {\r\n      username,\r\n      password\r\n    }\r\n    const result = await dispatcher(signin(formData))\r\n    const {\r\n      data: { status = false, data }\r\n    } = result.payload\r\n    if (status === false) {\r\n      setWrongCreds(true)\r\n      setUsername('')\r\n      setPassword('')\r\n    } else {\r\n      localStorage.setItem('isLoggedIn', 'true')\r\n      history.replace('/')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container component='main' maxWidth='xs'>\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component='h1' variant='h5'>\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={handleFormSubmit}>\r\n          <TextField\r\n            variant='outlined'\r\n            margin='normal'\r\n            required\r\n            fullWidth\r\n            id='username'\r\n            label='username'\r\n            name='username'\r\n            autoComplete='username'\r\n            autoFocus\r\n            value={username}\r\n            onChange={(event) => {\r\n              setUsername(event.target.value)\r\n            }}\r\n          />\r\n          <TextField\r\n            variant='outlined'\r\n            margin='normal'\r\n            required\r\n            fullWidth\r\n            name='password'\r\n            label='Password'\r\n            type='password'\r\n            id='password'\r\n            value={password}\r\n            autoComplete='current-password'\r\n            onChange={(event) => {\r\n              setPassword(event.target.value)\r\n            }}\r\n          />\r\n          {wrongCreds && (\r\n            <Alert severity='error' style={{ justifyContent: 'center', margin: 'auto auto' }}>\r\n              Incorrect credentials.Please try again\r\n            </Alert>\r\n          )}\r\n          <Button type='submit' fullWidth variant='contained' color='primary' className={classes.submit}>\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href='#' variant='body2' style={{ textDecoration: 'none' }}>\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link style={{ textDecoration: 'none' }} to='/signup'>\r\n                Don't have an account? Sign Up\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Button from '@material-ui/core/Button'\r\nimport { Link } from 'react-router-dom'\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Box from '@material-ui/core/Box'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Container from '@material-ui/core/Container'\r\nimport { useDispatch } from 'react-redux'\r\nimport { signup } from '../store/login'\r\nconst Copyright = () => {\r\n  return (\r\n    <Typography variant='body2' color='textSecondary' align='center'>\r\n      {'Copyright © Umesh Bhat '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  }\r\n}))\r\n\r\nexport default function SignUp() {\r\n  // const router = useRouter()\r\n  const [firstName, setFirstName] = useState(null)\r\n  const [lastName, setLastName] = useState(null)\r\n  const [username, setUsername] = useState(null)\r\n  const [password, setPassword] = useState(null)\r\n\r\n  const classes = useStyles()\r\n  const dispatcher = useDispatch()\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault()\r\n    const formData = {\r\n      firstName,\r\n      lastName,\r\n      username,\r\n      password\r\n    }\r\n    const data = await dispatcher(signup(formData))\r\n    const {\r\n      payload: { status, message }\r\n    } = data\r\n    alert(message)\r\n  }\r\n\r\n  const handlerSignin = () => {\r\n    // router.replace('/signin')\r\n  }\r\n\r\n  return (\r\n    <Container component='main' maxWidth='xs'>\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component='h1' variant='h5'>\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete='fname'\r\n                name='firstName'\r\n                variant='outlined'\r\n                required\r\n                fullWidth\r\n                id='firstName'\r\n                label='First Name'\r\n                onChange={(event) => {\r\n                  setFirstName(event.target.value)\r\n                }}\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant='outlined'\r\n                required\r\n                fullWidth\r\n                id='lastName'\r\n                label='Last Name'\r\n                name='lastName'\r\n                autoComplete='lname'\r\n                onChange={(event) => {\r\n                  setLastName(event.target.value)\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant='outlined'\r\n                required\r\n                fullWidth\r\n                id='username'\r\n                label='Username'\r\n                name='username'\r\n                autoComplete='username'\r\n                onChange={(event) => {\r\n                  setUsername(event.target.value)\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant='outlined'\r\n                required\r\n                fullWidth\r\n                name='password'\r\n                label='Password'\r\n                type='password'\r\n                id='password'\r\n                autoComplete='current-password'\r\n                onChange={(event) => {\r\n                  setPassword(event.target.value)\r\n                }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button type='submit' fullWidth variant='contained' color='primary' className={classes.submit}>\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify='center'>\r\n            <Grid item>\r\n              <Link style={{ textDecoration: 'none' }} to='/signin'>\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  )\r\n}\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { post, get, del } from '../libs/requests'\r\n\r\nconst initialState = { posts: [], arePostLoaded: false, eachPost: {} }\r\n\r\nexport const postQuestion = createAsyncThunk('postStore/postQuestion', async (formData, { rejectWithValue }) => {\r\n  try {\r\n    const { data } = await post('/api/v1/user/posts/post', formData)\r\n    return data\r\n  } catch (err) {\r\n    const { response } = err\r\n    if (!response) {\r\n      throw err\r\n    }\r\n    return rejectWithValue(response.data)\r\n  }\r\n})\r\nexport const deletePost = createAsyncThunk('postStore/deletePost', async (id, { rejectWithValue }) => {\r\n  try {\r\n    const { data } = await del(`/api/v1/user/posts/${id}/delete`, id)\r\n    return { data, id }\r\n  } catch (err) {\r\n    const { response } = err\r\n    if (!response) {\r\n      throw err\r\n    }\r\n    return rejectWithValue(response.data)\r\n  }\r\n})\r\nexport const likePost = createAsyncThunk('postStore/likePost', async (id, { rejectWithValue }) => {\r\n  try {\r\n    const data = await post(`/api/v1/user/posts/${id}/like`)\r\n    return data\r\n  } catch (err) {\r\n    const { response } = err\r\n    if (!response) {\r\n      throw err\r\n    }\r\n    return rejectWithValue(response.data)\r\n  }\r\n})\r\nexport const unlikePost = createAsyncThunk('postStore/unlikePost', async (id, { rejectWithValue }) => {\r\n  try {\r\n    const { data } = await del(`/api/v1/user/posts/${id}/unlike`)\r\n    return data\r\n  } catch (err) {\r\n    const { response } = err\r\n    if (!response) {\r\n      throw err\r\n    }\r\n    return rejectWithValue(response.data)\r\n  }\r\n})\r\nexport const getAllQuestions = createAsyncThunk('postStore/getAllQuestion', async (_, { rejectWithValue }) => {\r\n  try {\r\n    const { data } = await get('/api/v1/user/posts/getall')\r\n    return data\r\n  } catch (err) {\r\n    const { response } = err\r\n    if (!response) {\r\n      throw err\r\n    }\r\n    return rejectWithValue(response.data)\r\n  }\r\n})\r\n\r\nexport const getPostById = createAsyncThunk('postStore/getPostById', async (id, { rejectWithValue }) => {\r\n  try {\r\n    const { data } = await get(`/api/v1/user/posts/${id}/get`)\r\n    return data\r\n  } catch (err) {\r\n    const { response } = err\r\n    if (!response) {\r\n      throw err\r\n    }\r\n    return rejectWithValue(response.data)\r\n  }\r\n})\r\nexport const postComment = createAsyncThunk(\r\n  'postStore/postComment',\r\n  async ({ postId, comment, parentCommentId }, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await post(`/api/v1/user/posts/${postId}/comment`, { comment, parentCommentId })\r\n      return data\r\n    } catch (err) {\r\n      const { response } = err\r\n      if (!response) {\r\n        throw err\r\n      }\r\n      return rejectWithValue(response.data)\r\n    }\r\n  }\r\n)\r\nconst Post = createSlice({\r\n  name: 'PostStore',\r\n  initialState,\r\n\r\n  reducers: {\r\n    testAction: (state, { payload }) => {\r\n      console.log(`${Date.now()} - TEST ACTION: `, payload.msg)\r\n    },\r\n    addCommentToStore: (state, { payload }) => {\r\n      if (state.eachPost[payload.parentPostId].comments?.length) {\r\n        state.eachPost[payload.parentPostId].comments.push(payload)\r\n      } else {\r\n        state.eachPost[payload.parentPostId].comments = []\r\n        state.eachPost[payload.parentPostId].comments.push(payload)\r\n      }\r\n    }\r\n  },\r\n\r\n  extraReducers: (builder) => {\r\n    builder.addCase(postQuestion.fulfilled, (state, { payload }) => {\r\n      const { data } = payload\r\n      state.posts.unshift(data)\r\n      state.eachPost[data._id] = data\r\n      // state.eachPost[data._id] = data\r\n    })\r\n\r\n    builder.addCase(postQuestion.rejected, (state, action) => {\r\n      console.log('posted unsuccessfully', action)\r\n    })\r\n    builder.addCase(getPostById.fulfilled, (state, { payload }) => {\r\n      const { result } = payload\r\n      // console.log('result of each is ', result)\r\n      state.eachPost[result._id] = result\r\n      let flag = null,\r\n        type = null\r\n      for (let i = 0; i < result.likes.length; i++) {\r\n        if (localStorage.getItem('username') === result.likes[i].username) {\r\n          flag = 1\r\n          type = result.likes[i].like.toString()\r\n          break\r\n        }\r\n      }\r\n      if (flag == 1) {\r\n        state.eachPost[result._id].isPostLiked = type\r\n      } else {\r\n        state.eachPost[result._id].isPostLiked = false\r\n      }\r\n    })\r\n\r\n    builder.addCase(getPostById.rejected, (state, action) => {\r\n      console.log('loading failed', action)\r\n    })\r\n    builder.addCase(likePost.fulfilled, (state, { payload }) => {\r\n      const {\r\n        data: { status, data }\r\n      } = payload\r\n\r\n      if (status) {\r\n        //post has been liked sucessfully\r\n        const {\r\n          data: { data }\r\n        } = payload\r\n        //check if the post is already prsent in the stor, thus remove its \"unlike\"\r\n        if (state.eachPost[data.parentPostId]?.isPostLiked === 'false') {\r\n          state.eachPost[data.parentPostId].totalDislikes--\r\n        }\r\n\r\n        state.eachPost[data.parentPostId].isPostLiked = 'true'\r\n        state.eachPost[data.parentPostId].totalLikes = state.eachPost[data.parentPostId].totalLikes\r\n          ? state.eachPost[data.parentPostId].totalLikes++\r\n          : 1\r\n      } else {\r\n        //post has  been already liked, thus removing it\r\n        state.eachPost[data.parentPostId].totalLikes--\r\n        state.eachPost[data.parentPostId].isPostLiked = null\r\n      }\r\n    })\r\n\r\n    builder.addCase(likePost.rejected, (state, action) => {})\r\n    builder.addCase(unlikePost.fulfilled, (state, { payload }) => {\r\n      const { status, data } = payload\r\n      if (status) {\r\n        if (state.eachPost[data.parentPostId]?.isPostLiked === 'true') {\r\n          state.eachPost[data.parentPostId].totalLikes--\r\n        }\r\n        state.eachPost[data.parentPostId].totalDislikes++\r\n        state.eachPost[data.parentPostId].isPostLiked = 'false'\r\n        state.eachPost[data.parentPostId].totalDislikes = state.eachPost[data.parentPostId].totalDislikes\r\n          ? state.eachPost[data.parentPostId].totalDislikes++\r\n          : 1\r\n      } else {\r\n        //post has  been already disliked, thus remvoing dislike\r\n\r\n        state.eachPost[data.parentPostId].totalDislikes--\r\n        state.eachPost[data.parentPostId].isPostLiked = null\r\n      }\r\n    })\r\n\r\n    builder.addCase(unlikePost.rejected, (state, action) => {})\r\n    builder.addCase(getAllQuestions.fulfilled, (state, { payload }) => {\r\n      const { data } = payload\r\n      state.posts = data\r\n      state.arePostLoaded = true\r\n    })\r\n\r\n    builder.addCase(getAllQuestions.rejected, (state, action) => {})\r\n    builder.addCase(\r\n      deletePost.fulfilled,\r\n      (\r\n        state,\r\n        {\r\n          payload: {\r\n            data: { data },\r\n            id\r\n          }\r\n        }\r\n      ) => {\r\n        console.log('deletes ', data, id)\r\n        if (data?.deletedCount == 1) {\r\n          state.posts.splice(\r\n            state.posts.findIndex((post) => {\r\n              return post._id === id\r\n            }),\r\n            1\r\n          )\r\n        }\r\n      }\r\n    )\r\n\r\n    builder.addCase(postComment.rejected, (state, action) => {})\r\n    builder.addCase(postComment.fulfilled, (state, { payload }) => {\r\n      console.log('commented successfully', payload)\r\n    })\r\n\r\n    builder.addCase(deletePost.rejected, (state, action) => {\r\n      console.log('Server error occured in deleting the post', action)\r\n    })\r\n  }\r\n})\r\n\r\nexport const { testAction, addCommentToStore } = Post.actions\r\n\r\nexport default Post.reducer\r\n","import React, { useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport Container from '@material-ui/core/Container'\r\nimport { Button, Grid } from '@material-ui/core'\r\nimport { postQuestion, getAllQuestions } from '../store/post'\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch'\r\n    }\r\n  }\r\n}))\r\n\r\nfunction NewPost() {\r\n  const [post, setPost] = useState('')\r\n  const classes = useStyles()\r\n  const dispatcher = useDispatch()\r\n\r\n  const { id } = useSelector((state) => state.login)\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault()\r\n    if (!post.length) return alert('Post can not be empty!')\r\n    const formData = { post }\r\n    await dispatcher(postQuestion(formData))\r\n    // await dispatcher(getAllQuestions())\r\n    setPost('')\r\n  }\r\n  const handleInputChange = (event) => {\r\n    setPost(event.target.value)\r\n  }\r\n  return (\r\n    <Container style={{ width: 'inherit' }}>\r\n      <Grid>\r\n        <Grid conatiner item direction='column'>\r\n          <form className={classes.root} Validate autoComplete='off'>\r\n            <div style={{ position: 'relative' }}>\r\n              <TextField\r\n                id='outlined-multiline-static'\r\n                label={`Post what's on your mind!`}\r\n                multiline\r\n                rows={6}\r\n                defaultValue={post}\r\n                variant='outlined'\r\n                placeholder='Enter your post'\r\n                onChange={handleInputChange}\r\n                value={post}\r\n                style={{ width: '100%' }}\r\n              ></TextField>\r\n              <Button\r\n                variant='contained'\r\n                color='Primary'\r\n                onClick={handleFormSubmit}\r\n                style={{ position: 'absolute', bottom: '12px', right: '0px' }}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default NewPost\r\n","import React, { useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport Container from '@material-ui/core/Container'\r\nimport { Button, Grid, Card, CardContent, Typography } from '@material-ui/core'\r\nimport dayjs from 'dayjs'\r\nimport ReplyIcon from '@material-ui/icons/Reply'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport ArrowDropDownRoundedIcon from '@material-ui/icons/ArrowDropDownRounded'\r\nimport { postComment, addCommentToStore } from '../store/post'\r\nimport ArrowDropUpRoundedIcon from '@material-ui/icons/ArrowDropUpRounded'\r\nfunction SingleComment({ comment, refreshFunction, postId }) {\r\n  const [commentReply, setCommentReply] = useState('')\r\n  const [openReply, setOpenReply] = useState(false)\r\n  const dispatcher = useDispatch()\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault()\r\n    if (!commentReply.length) return alert('comment can not be empty!')\r\n    const formData = { parentCommentId: comment._id, comment: commentReply, postId: comment.parentPostId }\r\n    const result = await dispatcher(postComment(formData))\r\n    const {\r\n      payload: { data, status }\r\n    } = result\r\n    if (status) {\r\n      refreshFunction(data)\r\n      setCommentReply('')\r\n    }\r\n  }\r\n  const handleInputChange = (event) => {\r\n    setCommentReply(event.target.value)\r\n  }\r\n  const handleOpenReply = () => {\r\n    setOpenReply(!openReply)\r\n  }\r\n\r\n  return (\r\n    <div style={{ marginLeft: '5px' }}>\r\n      <hr />\r\n\r\n      <Card>\r\n        <CardContent>\r\n          <Typography color='primary' variant='h6'>\r\n            {comment.username}\r\n          </Typography>\r\n\r\n          <Typography variant='body1' component='p'>\r\n            {comment.comment}\r\n          </Typography>\r\n          <Typography variant='body2' component='p'>\r\n            {dayjs(comment.time).format('h:mm:ss A')}\r\n          </Typography>\r\n        </CardContent>\r\n\r\n        <div style={{ marginLeft: '5px' }}>\r\n          {openReply ? (\r\n            <>\r\n              <span onClick={handleOpenReply}>\r\n                Close\r\n                <ArrowDropUpRoundedIcon />\r\n              </span>\r\n              <form onSubmit={handleFormSubmit}>\r\n                <div style={{ position: 'relative', margin: '2px 5px' }}>\r\n                  <TextField\r\n                    id='outlined-multiline-static'\r\n                    label='Enter your reply'\r\n                    multiline\r\n                    rows={2}\r\n                    defaultValue={commentReply}\r\n                    variant='outlined'\r\n                    placeholder='Be polite online!'\r\n                    onChange={handleInputChange}\r\n                    value={commentReply}\r\n                    style={{ width: '100%' }}\r\n                  ></TextField>\r\n                  <Button\r\n                    variant='contained'\r\n                    color='Primary'\r\n                    onClick={handleFormSubmit}\r\n                    style={{ position: 'absolute', bottom: '5px', right: '5px' }}\r\n                  >\r\n                    Reply\r\n                  </Button>\r\n                </div>\r\n              </form>\r\n            </>\r\n          ) : (\r\n            <div style={{ marginLeft: '10px' }} onClick={handleOpenReply}>\r\n              Reply\r\n              <ArrowDropDownRoundedIcon />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SingleComment\r\n","import React, { useState, useEffect } from 'react'\r\nimport SingleComment from './SingleComment'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport clsx from 'clsx'\r\nimport PublishTwoToneIcon from '@material-ui/icons/PublishTwoTone'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    minWidth: 275\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)'\r\n  },\r\n  title: {\r\n    fontSize: 14\r\n  },\r\n  pos: {\r\n    marginBottom: 12\r\n  },\r\n  expand: {\r\n    color: 'black',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest\r\n    })\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n    color: '#303F9F'\r\n  }\r\n}))\r\n\r\nfunction ReplyComment({ commentList, postId, refreshFunction, parentCommentId }) {\r\n  const [childCommentCount, setChildCommentCount] = useState(0)\r\n  const [showReplyComments, setShowReplyComments] = useState(false)\r\n  const [expanded, setExpanded] = React.useState(true)\r\n  const classes = useStyles()\r\n\r\n  useEffect(() => {\r\n    let commentNumber = 0\r\n    if (commentList?.length) {\r\n      commentList.map((comment) => {\r\n        if (comment.parentCommentId == parentCommentId) {\r\n          commentNumber++\r\n        }\r\n        setChildCommentCount(commentNumber)\r\n      })\r\n    }\r\n  }, [commentList?.length])\r\n  const handleChange = () => {\r\n    setShowReplyComments(!showReplyComments)\r\n    setExpanded(!expanded)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {childCommentCount > 0 && (\r\n        <div\r\n          onClick={handleChange}\r\n          style={{ fontSize: '14px', margin: '10px 10px', color: 'gray', display: 'flex', alignItems: 'center' }}\r\n        >\r\n          {expanded ? (\r\n            <span>\r\n              view {childCommentCount} more {childCommentCount.length > 1 ? 'replies' : 'reply'}\r\n            </span>\r\n          ) : (\r\n            'Hide Replies'\r\n          )}\r\n          <PublishTwoToneIcon\r\n            className={clsx(classes.expand, {\r\n              [classes.expandOpen]: expanded\r\n            })}\r\n          />\r\n        </div>\r\n      )}\r\n      {showReplyComments &&\r\n        commentList?.length &&\r\n        commentList.map((comment, index) => (\r\n          <>\r\n            {comment.parentCommentId === parentCommentId && (\r\n              <div style={{ marginLeft: '30px', width: '90%' }} className={classes.root}>\r\n                <SingleComment comment={comment} postId={postId} refreshFunction={refreshFunction} />\r\n                <ReplyComment\r\n                  commentList={commentList}\r\n                  postId={postId}\r\n                  parentCommentId={comment._id}\r\n                  refreshFunction={refreshFunction}\r\n                />\r\n              </div>\r\n            )}\r\n          </>\r\n        ))}\r\n    </div>\r\n  )\r\n}\r\nexport default ReplyComment\r\n","import React, { useState } from 'react'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport SingleComment from './SingleComment'\r\nimport { Button, Grid, Container } from '@material-ui/core'\r\nimport { postComment } from '../store/post'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport ReplyComment from './ReplyComment'\r\n\r\nfunction RecursiveContainer({ postId, refreshFunction, commentList }) {\r\n  const [comment, setComment] = useState('')\r\n  const dispatcher = useDispatch()\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault()\r\n    if (!comment.length) return alert('Comment can not be empty!')\r\n    const result = await dispatcher(postComment({ postId, comment }))\r\n    const {\r\n      payload: { data, status }\r\n    } = result\r\n    if (status) {\r\n      refreshFunction(data)\r\n    }\r\n    setComment('')\r\n  }\r\n  const handleInputChange = (event) => {\r\n    setComment(event.target.value)\r\n  }\r\n  return (\r\n    <Grid style={{ width: 'inherit' }}>\r\n      <br />\r\n      <span style={{ marginLeft: '10px' }}>\r\n        {commentList?.length ? `Total Reply:${commentList.length}` : 'Wow, it looks so empty!'}\r\n      </span>\r\n      {commentList?.length > 0 &&\r\n        commentList.map(\r\n          (comment, index) =>\r\n            !comment.parentCommentId && (\r\n              <>\r\n                <SingleComment comment={comment} postId={postId} refreshFunction={refreshFunction} />\r\n                <ReplyComment\r\n                  commentList={commentList}\r\n                  parentCommentId={comment._id}\r\n                  postId={postId}\r\n                  refreshFunction={refreshFunction}\r\n                />\r\n              </>\r\n            )\r\n        )}\r\n      <form onSubmit={handleFormSubmit}>\r\n        <div style={{ position: 'relative', margin: '10px 5px' }}>\r\n          <TextField\r\n            id='outlined-multiline-static'\r\n            label=\"Comment what's on your mind!\"\r\n            multiline\r\n            rows={2}\r\n            defaultValue={comment}\r\n            variant='outlined'\r\n            placeholder='Enter your comment'\r\n            onChange={handleInputChange}\r\n            value={comment}\r\n            style={{ width: '100%' }}\r\n          ></TextField>\r\n          <Button\r\n            variant='contained'\r\n            color='Primary'\r\n            onClick={handleFormSubmit}\r\n            style={{ position: 'absolute', bottom: '5px', right: '5px' }}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default RecursiveContainer\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nimport dayjs from 'dayjs'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getPostById, likePost, unlikePost, deletePost, addCommentToStore } from '../store/post'\r\n\r\nimport ThumbUpAltOutlinedIcon from '@material-ui/icons/ThumbUpAltOutlined'\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt'\r\nimport ThumbDownAltOutlinedIcon from '@material-ui/icons/ThumbDownAltOutlined'\r\nimport ThumbDownTwoToneIcon from '@material-ui/icons/ThumbDownTwoTone'\r\nimport ThumbDownAltIcon from '@material-ui/icons/ThumbDownAlt'\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport { getUsername } from '../libs/util'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport clsx from 'clsx'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardHeader from '@material-ui/core/CardHeader'\r\nimport CardMedia from '@material-ui/core/CardMedia'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport CardActions from '@material-ui/core/CardActions'\r\nimport Collapse from '@material-ui/core/Collapse'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { red } from '@material-ui/core/colors'\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport RecursiveContainer from './RecursiveContainer'\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    minWidth: 275\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)'\r\n  },\r\n  title: {\r\n    fontSize: 14\r\n  },\r\n  pos: {\r\n    marginBottom: 12\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest\r\n    })\r\n  },\r\n  expandOpen: {\r\n    // transform: 'rotate(180deg)'\r\n  }\r\n}))\r\n\r\nexport default function Post({ content }) {\r\n  const dispatch = useDispatch()\r\n  const [disableButton, setDisableButton] = useState(false)\r\n  const [expanded, setExpanded] = React.useState(false)\r\n  const posts = useSelector((state) => state.posts)\r\n  const postStats = posts?.eachPost[content._id]\r\n  const commentList = postStats?.comments\r\n\r\n  useEffect(() => {\r\n    const getPostData = async () => {\r\n      dispatch(getPostById(content._id))\r\n    }\r\n    getPostData()\r\n  }, [])\r\n\r\n  const updateFunction = (doc) => {\r\n    dispatch(addCommentToStore(doc))\r\n  }\r\n  const classes = useStyles()\r\n  const handleLikeButton = async () => {\r\n    setDisableButton(true)\r\n    await dispatch(likePost(content._id))\r\n    setDisableButton(false)\r\n  }\r\n  const handleUnikeButton = async () => {\r\n    setDisableButton(true)\r\n    await dispatch(unlikePost(content._id))\r\n    setDisableButton(false)\r\n  }\r\n  const handleDeleteButton = async () => {\r\n    setDisableButton(true)\r\n    await dispatch(deletePost(content._id))\r\n    setDisableButton(false)\r\n  }\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded)\r\n  }\r\n  return (\r\n    <Grid container direction='column'>\r\n      <Card id={content._id} className={classes.root} style={{ margin: '20px 0', width: '100%' }}>\r\n        <Grid item>\r\n          <CardContent style={{ backgroundColor: '#E8E8E8' }}>\r\n            <Typography color='primary' variant='h6'>\r\n              {content.username}\r\n            </Typography>\r\n\r\n            <Typography variant='body2' component='p'>\r\n              {content.post}\r\n            </Typography>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Typography variant='body2' component='p'>\r\n              {dayjs(content.time).format('h:mm:ss A')}\r\n            </Typography>\r\n            <Button size='small' onClick={handleLikeButton} disabled={disableButton}>\r\n              {postStats?.isPostLiked === 'true' ? <ThumbUpAltIcon /> : <ThumbUpAltOutlinedIcon />}\r\n              {postStats?.totalLikes || 0}\r\n            </Button>\r\n            <Button size='small' onClick={handleUnikeButton} disabled={disableButton}>\r\n              {postStats?.isPostLiked === 'false' ? <ThumbDownAltIcon /> : <ThumbDownAltOutlinedIcon />}\r\n\r\n              {postStats?.totalDislikes || 0}\r\n            </Button>\r\n            <IconButton\r\n              className={clsx(classes.expand, {\r\n                [classes.expandOpen]: expanded\r\n              })}\r\n              onClick={handleExpandClick}\r\n            >\r\n              <ChatBubbleOutlineIcon />\r\n              {postStats?.totalComments || 0}\r\n            </IconButton>\r\n            <Button\r\n              style={{ visibility: getUsername() === content.username ? 'visible' : 'hidden' }}\r\n              onClick={handleDeleteButton}\r\n              disabled={disableButton}\r\n            >\r\n              <DeleteIcon />\r\n            </Button>\r\n          </CardActions>\r\n        </Grid>\r\n        <Grid item>\r\n          <Collapse in={expanded} timeout='auto' unmountOnExit>\r\n            <hr />\r\n            <RecursiveContainer\r\n              postId={content._id}\r\n              refreshFunction={updateFunction}\r\n              commentList={commentList?.length > 0 ? [...commentList].reverse() : commentList}\r\n            />\r\n          </Collapse>\r\n        </Grid>\r\n      </Card>\r\n    </Grid>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { fade, makeStyles } from '@material-ui/core/styles'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport InputBase from '@material-ui/core/InputBase'\r\nimport Badge from '@material-ui/core/Badge'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Menu from '@material-ui/core/Menu'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport AccountCircle from '@material-ui/icons/AccountCircle'\r\nimport MailIcon from '@material-ui/icons/Mail'\r\nimport NotificationsIcon from '@material-ui/icons/Notifications'\r\nimport MoreIcon from '@material-ui/icons/MoreVert'\r\nimport { getUsername } from '../libs/util'\r\nimport { signout } from '../store/login'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n    width: '100vw'\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block'\r\n    }\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25)\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 10,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: 'auto'\r\n    }\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit'\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch'\r\n    }\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex'\r\n    }\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none'\r\n    }\r\n  }\r\n}))\r\n\r\nexport default function PrimarySearchAppBar() {\r\n  let history = useHistory()\r\n  const dispatcher = useDispatch()\r\n  const classes = useStyles()\r\n  const [anchorEl, setAnchorEl] = React.useState(null)\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null)\r\n\r\n  const isMenuOpen = Boolean(anchorEl)\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl)\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget)\r\n  }\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null)\r\n  }\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null)\r\n    handleMobileMenuClose()\r\n  }\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget)\r\n  }\r\n  const handleLogout = async () => {\r\n    await dispatcher(signout())\r\n    // history.replace('/')\r\n    window.location.reload()\r\n  }\r\n\r\n  const menuId = 'primary-search-account-menu'\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleLogout}>Logout</MenuItem>\r\n    </Menu>\r\n  )\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile'\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <IconButton aria-label='show 4 new mails' color='inherit'>\r\n          <Badge badgeContent={4} color='secondary'>\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton aria-label='show 11 new notifications' color='inherit'>\r\n          <Badge badgeContent={11} color='secondary'>\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          aria-label='account of current user'\r\n          aria-controls='primary-search-account-menu'\r\n          aria-haspopup='true'\r\n          color='inherit'\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  )\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position='fixed' style={{ height: '60px' }}>\r\n        <Toolbar>\r\n          <IconButton edge='start' className={classes.menuButton} color='inherit' aria-label='open drawer'>\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <div>\r\n            <Typography className={classes.title} variant='h6' noWrap>\r\n              {getUsername()}\r\n            </Typography>\r\n          </div>\r\n\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder='Search…'\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <IconButton aria-label='show 4 new mails' color='inherit'>\r\n              <Badge badgeContent={4} color='secondary'>\r\n                <MailIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton aria-label='show 17 new notifications' color='inherit'>\r\n              <Badge badgeContent={17} color='secondary'>\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton\r\n              edge='end'\r\n              aria-label='account of current user'\r\n              aria-controls={menuId}\r\n              aria-haspopup='true'\r\n              onClick={handleProfileMenuOpen}\r\n              color='inherit'\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label='show more'\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup='true'\r\n              onClick={handleMobileMenuOpen}\r\n              color='inherit'\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </div>\r\n  )\r\n}\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { post, get } from '../libs/requests'\r\n\r\nconst initialState = {\r\n  otherUsers: []\r\n}\r\n\r\nexport const getOtherUsers = createAsyncThunk('UsersStore/getOtherUsers', async (formData, { rejectWithValue }) => {\r\n  try {\r\n    const result = await get('/api/v1/users', JSON.stringify(formData))\r\n    return result\r\n  } catch (err) {\r\n    const { response } = err\r\n    if (!response) {\r\n      throw err\r\n    }\r\n    return rejectWithValue(response)\r\n  }\r\n})\r\nexport const searchUserById = createAsyncThunk('UsersStore/searchUserById', async (id, { rejectWithValue }) => {\r\n  try {\r\n    const result = await get(`/api/v1/users/${id}`)\r\n    return result\r\n  } catch (err) {\r\n    const { response } = err\r\n    if (!response) {\r\n      throw err\r\n    }\r\n    return rejectWithValue(response)\r\n  }\r\n})\r\n\r\nconst Users = createSlice({\r\n  name: 'UsersStore',\r\n  initialState,\r\n\r\n  extraReducers: (builder) => {\r\n    builder.addCase(\r\n      getOtherUsers.fulfilled,\r\n      (\r\n        state,\r\n        {\r\n          payload: {\r\n            data: { status, users }\r\n          }\r\n        }\r\n      ) => {\r\n        if (status) {\r\n          state.otherUsers = users\r\n        }\r\n      }\r\n    )\r\n\r\n    builder.addCase(getOtherUsers.rejected, (state, action) => {\r\n      console.log('signup ERROR', action)\r\n    })\r\n    builder.addCase(searchUserById.fulfilled, (state, { payload: { data, status } }) => {\r\n      console.log('serach results are ', data)\r\n    })\r\n\r\n    builder.addCase(searchUserById.rejected, (state, action) => {\r\n      console.log('signup ERROR', action)\r\n    })\r\n  }\r\n})\r\nexport const {} = Users.actions\r\n\r\nexport default Users.reducer\r\n","import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { getOtherUsers } from '../store/users'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardActions from '@material-ui/core/CardActions'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport Button from '@material-ui/core/Button'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 300\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)'\r\n  },\r\n  title: {\r\n    fontSize: 14\r\n  },\r\n  pos: {\r\n    marginBottom: 12\r\n  }\r\n})\r\n\r\nfunction ListAllUsers() {\r\n  const UserInfo = ({ info }) => {\r\n    return (\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <Typography color='primary' variant='h6' component='h2'>\r\n            {info.username}\r\n          </Typography>\r\n          <Typography className={classes.pos} color='textSecondary'></Typography>\r\n          <Typography variant='body2' component='p'>\r\n            {`${info.firstName} ${info.lastName}`}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button size='small' style={{ display: 'flex', alignItems: 'center' }}>\r\n            <span style={{ marginRight: '5px' }}> Add to friends</span>\r\n            <PersonAddIcon />\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    )\r\n  }\r\n  const classes = useStyles()\r\n  const users = useSelector((state) => state.users)\r\n  const dispatcher = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatcher(getOtherUsers())\r\n  }, [users?.OtherUsers])\r\n\r\n  return (\r\n    <Grid container direction='column' spacing={1}>\r\n      <Grid item>\r\n        <div>People you might know</div>\r\n      </Grid>\r\n      {users?.otherUsers?.map((user) => (\r\n        <Grid item>\r\n          <UserInfo info={user} />\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default ListAllUsers\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport InboxIcon from '@material-ui/icons/Inbox'\r\nimport DraftsIcon from '@material-ui/icons/Drafts'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Card from '@material-ui/core/Card'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}))\r\nexport default function ClippedDrawer() {\r\n  function ListItemLink(props) {\r\n    return <ListItem button component='a' {...props} />\r\n  }\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <List component='nav' aria-label='main mailbox folders '>\r\n      <ListItem button>\r\n        <ListItemIcon>\r\n          <InboxIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary='Inbox' />\r\n      </ListItem>\r\n      <ListItem button>\r\n        <ListItemIcon>\r\n          <DraftsIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary='Drafts' />\r\n      </ListItem>\r\n    </List>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport Newpost from '../components/NewPost'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { getAllQuestions } from '../store/post'\r\nimport Post from '../components/Post'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Header from '../components/Header'\r\nimport ListAllUsers from '../components/ListAllUsers'\r\nimport Sidebar from '../components/Sidebar'\r\nimport Divider from '@material-ui/core/Divider'\r\n\r\nfunction Home() {\r\n  const dispatcher = useDispatch()\r\n  const { posts, arePostLoaded, eachPost } = useSelector((store) => store.posts)\r\n\r\n  useEffect(() => {\r\n    const getAllPosts = async () => {\r\n      dispatcher(getAllQuestions())\r\n    }\r\n    getAllPosts()\r\n  }, [])\r\n  return (\r\n    <Grid direction='column' spacing={10} style={{ flex: 1, display: 'flex', minHeight: '0px' }}>\r\n      <Grid item xm={12}>\r\n        <Header />\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        direction='row'\r\n        item\r\n        xm={12}\r\n        justify='space-evenly'\r\n        spacing={8}\r\n        style={{ position: 'absolute', top: '60px' }}\r\n      >\r\n        <Grid item xs={2} lg={2} alignItems='stretch' style={{ borderRight: '1px solid lightgray' }}>\r\n          <Sidebar />\r\n        </Grid>\r\n        <Grid item xs={8} lg={7} style={{}}>\r\n          <Grid container direction='column' style={{ flex: 1, overflow: 'auto', minHeight: '0px' }}>\r\n            <Grid item>\r\n              <Newpost />\r\n            </Grid>\r\n            <Grid item>{arePostLoaded && posts.map((data) => <Post content={data} />)}</Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={2} lg={3}>\r\n          <ListAllUsers />\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport logo from './logo.svg'\r\nimport './App.css'\r\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from 'react-router-dom'\r\nimport Signin from './pages/Signin'\r\nimport Signup from './pages/Signup'\r\nimport Home from './pages/Home'\r\n\r\nfunction App() {\r\n  const PathSwitcher = () => (\r\n    <Switch>\r\n      <PrivateRoute exact path='/'>\r\n        <Home />\r\n      </PrivateRoute>\r\n      <Route exact path='/signup'>\r\n        {Auth() ? <Redirect to='/' /> : <Signup />}\r\n      </Route>\r\n      <Route exact path='/signin'>\r\n        {Auth() ? <Redirect to='/' /> : <Signin />}\r\n      </Route>\r\n      <Route path='*'>\r\n        {/* <Home /> */}\r\n        {Auth() ? <Redirect to='/' /> : <Signin />}\r\n      </Route>\r\n    </Switch>\r\n  )\r\n\r\n  const PrivateRoute = ({ children, ...rest }) => {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={({ location }) =>\r\n          Auth() ? (\r\n            children\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: '/signin',\r\n                state: { from: location }\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    )\r\n  }\r\n  const Auth = () => {\r\n    return localStorage.getItem('isLoggedIn') == 'true' ? true : false\r\n  }\r\n  return <PathSwitcher />\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { combineReducers, configureStore } from '@reduxjs/toolkit'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport login from './login'\r\nimport post from './post'\r\nimport users from './users'\r\n\r\nconst reducers = combineReducers({\r\n  login,\r\n  posts: post,\r\n  users\r\n})\r\n\r\nexport const store = configureStore({\r\n  reducer: reducers,\r\n  middleware: [thunkMiddleware],\r\n  devTools: true\r\n})\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\n\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport { store } from './store/store'\r\n\r\nimport { Router } from 'react-router-dom'\r\nimport { createBrowserHistory } from 'history'\r\nconst history = createBrowserHistory()\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router history={history}>\r\n      <React.StrictMode>\r\n        <App />\r\n      </React.StrictMode>\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\nif (module.hot) {\r\n  module.hot.accept()\r\n}\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n","const getUsername = () => {\r\n  return localStorage.getItem('username')\r\n}\r\nmodule.exports = { getUsername }\r\n"],"sourceRoot":""}